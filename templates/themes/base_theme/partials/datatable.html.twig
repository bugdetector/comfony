<div {{ attributes }} class='bg-white p-3 dark:bg-slate-900'>
	{% block filters %}
		<div class="relative mb-5">
			<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
				<span class='i-tabler-search'></span>
			</div>
			<input type="search" data-model="debounce(300)|query" autocomplete='off' value="{{ this.query }}" class="block pt-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="{{'Search'|trans}}">
		</div>
	{% endblock %}
	<div id="datatable-table" class="transition-all" data-loading="addClass(opacity-50 blur-sm)">
		<div class='w-full overflow-auto'>
			<table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-200">
				{% set pagination = this.getPagination() %}
				<caption class="text-start font-bold mb-3 sticky left-0">
					{% set end = ((pagination.getCurrentPageNumber()) * pagination.getItemNumberPerPage()) %}
					{% trans with {
                    'total': pagination.getTotalItemCount(), 
                    'start': ((pagination.getCurrentPageNumber() - 1) * pagination.getItemNumberPerPage()), 
                    'end': end > pagination.getTotalItemCount() ? pagination.getTotalItemCount() : end
                } %}Out of :total records :start - :end is monitoring{% endtrans %}
				</caption>
				<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-200">
					<tr>
						{% block headers %}
							{% for column, data in this.getTableBuildData()["headers"] %}
								{% if data.sortable is defined and data.sortable %}
									<th class="px-6 py-3 text-nowrap">
										<button class="text-blue-500 w-full flex justify-between align-baseline uppercase" data-action="live#action" data-live-action-param="setSort" data-live-sort-param="{{ column }}" data-live-direction-param="{{ this.direction == 'DESC' ? 'ASC' : 'DESC' }}" role='button'>
										{% set sorted = this.sort == column %}
											<span class="text-current">{{ data.label }}</span>
											{% if sorted %}
												{% if direction == 'ASC' %}
													<span class='i-tabler-sort-ascending'></span>
												{% else %}
													<span class='i-tabler-sort-descending'></span>
												{% endif %}
											{% else %}
												<span class='i-tabler-arrows-sort'></span>
											{% endif %}
										</button>
									</th>
								{% else %}
									<th class="px-6 py-3">{{ data.label|trans }}</th>
								{% endif %}
							{% endfor %}
						{% endblock %}
					</tr>
				</thead>
				<tbody {{ listTopic ? ('id="' ~ listTopic ~ '"')|raw }} {{ listTopic ? turbo_stream_listen(listTopic) }}> 
					{% block rows %}{% endblock %}
				</tbody>
			</table>
		</div>

		{% block pagination %}
			{{ knp_pagination_render(pagination, '@base_theme/partials/pagination.html.twig') }}
		{% endblock %}
	</div>
</div>
