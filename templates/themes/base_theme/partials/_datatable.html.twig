<div {{ attributes }} class="grid mt-4 rounded-xl border-2 border-base-300">
	{% block filters %}
		<div class="flex justify-between gap-2 p-3">
			<label class="input w-full sm:w-64 flex items-center gap-2">
				<i class="i-tabler-search"></i>
				<input type="search" data-model="debounce(300)|query" autocomplete='off' value="{{ this.query }}" placeholder="{{'Search'|trans}}" class="grow">
			</label>
			{% if filterForm %}
				<div class="dropdown end-0 top-0 dropdown-end">
					<button class="btn btn-secondary btn-outline bg-base-100 text-accent" tabindex="0" role="button">
						<i class="i-tabler-filter"></i>
						<i class="i-tabler-chevron-down"></i>
					</button>
					<ul class="dropdown-content w-64 max-h-96 overflow-y-auto bg-base-100 shadow pt-4">
						{{ form_start(filterForm) }}
						{% for field in filterForm %}
							<div class='px-4'>
								{{ form_row(field) }}
							</div>
						{% endfor %}
						<div class="sticky bottom-0">
							<button type="reset" class="btn btn-error btn-sm w-full rounded-t-none justify-center" data-action="live#action" data-live-action-param="resetFilters">
								{{ 'Clear'|trans }}
							</button>
						</div>
						{{ form_end(filterForm) }}
					</ul>
				</div>
			{% endif %}
		</div>
		<div class="divider"></div>
	{% endblock %}
	{% set pagination = this.getPagination() %}
	<div class="overflow-x-auto p-3" data-loading="addClass(opacity-50 blur-sm)">
		<table class="table table-zebra">
			<caption class="text-start font-bold my-3 ms-3">
				{% set end = ((pagination.getCurrentPageNumber()) * pagination.getItemNumberPerPage()) %}
				{% trans with {
				'total': pagination.getTotalItemCount(), 
				'start': ((pagination.getCurrentPageNumber() - 1) * pagination.getItemNumberPerPage()), 
				'end': end > pagination.getTotalItemCount() ? pagination.getTotalItemCount() : end
			} %}Out of :total records :start - :end is monitoring{% endtrans %}
			</caption>
			<thead>
				<tr>
					{% block headers %}
						{% for column, data in this.headers %}
							{% if data.sortable is defined and data.sortable %}
								<th>
									<button class="btn btn-ghost" data-action="live#action" data-live-action-param="setSort" data-live-sort-param="{{ column }}" data-live-direction-param="{{ this.direction == 'DESC' ? 'ASC' : 'DESC' }}" role='button'>
										<span class="me-4">{{ data.label }}</span>
										{% set sorted = this.sort == column %}
										{% if sorted %}
											{% if direction == 'ASC' %}
												<i class="i-tabler-chevron-up"></i>
											{% else %}
												<i class="i-tabler-chevron-down"></i>
											{% endif %}
										{% else %}
											<i class="i-tabler-arrows-sort"></i>
										{% endif %}
									</button>
								</th>
							{% else %}
								<th>{{ data.label|trans }}</th>
							{% endif %}
						{% endfor %}
					{% endblock %}
				</tr>
			</thead>
			<tbody {{ listTopic ? ('id="' ~ listTopic ~ '"')|raw }} {{ listTopic ? turbo_stream_listen(listTopic, options: {withCredentials: true} ) }}>
				{% block rows %}
					{% if this.rowTemplateFile %}
						{% for object in pagination %}
							{% include this.rowTemplateFile with {object} %}
						{% else %}
							<tr>
								<td colspan="{{ this.getTableBuildData()['headers']|length ?: 6 }}" class="px-6 py-3">{{ 'No Result Found'|trans }}</td>
							</tr>
						{% endfor %}
					{% endif %}
				{% endblock %}
			</tbody>
		</table>
	</div>
	{% block pagination %}
		{{ knp_pagination_render(pagination, theme.themeDirectory ~ '/partials/_pagination.html.twig') }}
	{% endblock %}
</div>


{% macro placeholder(props) %}
	{% block loadingFilters %}
		<div class="flex justify-between gap-2 p-3">
			<label class="input w-full sm:w-64 flex items-center gap-2">
				<i class="i-tabler-search"></i>
				<input type="search" data-model="debounce(300)|query" autocomplete='off' value="{{ props.query }}" placeholder="{{'Search'|trans}}" class="grow">
			</label>
			{% if props.filterForm %}
				<div class="dropdown end-0 top-0 dropdown-end">
					<button class="btn btn-secondary btn-outline bg-base-100 text-accent" tabindex="0" role="button">
						<i class="i-tabler-filter"></i>
						<i class="i-tabler-chevron-down"></i>
					</button>
					<ul class="dropdown-content w-64 max-h-96 overflow-y-auto bg-base-100 shadow pt-4">
						{{ form_start(props.filterForm) }}
						{% for field in props.filterForm %}
							<div class='px-4'>
								{{ form_row(field) }}
							</div>
						{% endfor %}
						<div class="sticky bottom-0">
							<button type="reset" class="btn btn-error btn-sm w-full rounded-t-none justify-center" data-action="live#action" data-live-action-param="resetFilters">
								{{ 'Clear'|trans }}
							</button>
						</div>
						{{ form_end(props.filterForm) }}
					</ul>
				</div>
			{% endif %}
		</div>
		<div class="divider"></div>
	{% endblock %}
	<div class="overflow-x-auto p-3" data-loading="addClass(opacity-50 blur-sm)">
		<table class="table table-zebra">
			<caption class="text-start font-bold my-3 ms-3"></caption>
			<thead>
				<tr>
					{% block loadingHeaders %}
						{% for column, data in props.headers %}
							{% if data.sortable is defined and data.sortable %}
								<th>
									<button class="btn btn-ghost" data-action="live#action" data-live-action-param="setSort" data-live-sort-param="{{ column }}" data-live-direction-param="{{ props.direction == 'DESC' ? 'ASC' : 'DESC' }}" role='button'>
										<span class="me-4">{{ data.label }}</span>
										{% set sorted = props.sort == column %}
										{% if sorted %}
											{% if props.direction == 'ASC' %}
												<i class="i-tabler-chevron-up"></i>
											{% else %}
												<i class="i-tabler-chevron-down"></i>
											{% endif %}
										{% else %}
											<i class="i-tabler-arrows-sort"></i>
										{% endif %}
									</button>
								</th>
							{% else %}
								<th>{{ data.label|trans }}</th>
							{% endif %}
						{% endfor %}
					{% endblock %}
				</tr>
			</thead>
			<tbody>
				{% for i in range(0, 3) %}
					<tr>
						{% for column, data in props.headers %}
							<td>
								<div class="skeleton h-4 w-full"></div>
							</td>
						{% endfor %}
					</tr>
				{% endfor %}
			</tbody>
		</table>
	</div>
{% endmacro %}
